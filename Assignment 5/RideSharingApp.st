PackageManifest subclass: #ManifestRideSharingApp	instanceVariableNames: ''	classVariableNames: ''	package: 'RideSharingApp-Manifest'!!ManifestRideSharingApp commentStamp: '<historical>' prior: 0!I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManifestRideSharingApp class	instanceVariableNames: ''!!ManifestRideSharingApp class methodsFor: 'code-critics' stamp: 'Anonymous 6/14/2025 14:39'!ruleGRIvarNeitherReadNorWrittenRuleV1FalsePositive	^ #(#(#(#RGPackageDefinition #(#RideSharingApp)) #'2025-06-14T14:39:57.643916+03:00') )! !!ManifestRideSharingApp class methodsFor: 'code-critics' stamp: 'Anonymous 6/14/2025 14:39'!ruleRBClassNotReferencedRuleV1FalsePositive	^ #(#(#(#RGPackageDefinition #(#RideSharingApp)) #'2025-06-14T14:39:50.449916+03:00') )! !!ManifestRideSharingApp class methodsFor: 'code-critics' stamp: 'Anonymous 6/14/2025 14:40'!ruleRBNoClassCommentRuleV1FalsePositive	^ #(#(#(#RGPackageDefinition #(#RideSharingApp)) #'2025-06-14T14:40:07.370916+03:00') )! !!ManifestRideSharingApp class methodsFor: 'code-critics' stamp: 'Anonymous 6/14/2025 14:42'!ruleRBImplementedNotSentRuleV1FalsePositive	^ #(#(#(#RGPackageDefinition #(#RideSharingApp)) #'2025-06-14T14:42:09.003916+03:00') )! !Object subclass: #Driver	instanceVariableNames: 'driverID name rating assignedRides'	classVariableNames: ''	package: 'RideSharingApp'!!Driver methodsFor: 'ride-management' stamp: 'Anonymous 6/14/2025 14:50'!addRide: aRide    assignedRides add: aRide.! !!Driver methodsFor: 'displaying' stamp: 'Anonymous 6/14/2025 14:52'!getDriverInfo    ^ 'Driver ID: ', driverID asString,      ' | Name: ', name,      ' | Rating: ', rating asString,      ' | Rides Assigned: ', assignedRides size asString.! !!Driver methodsFor: 'initialization' stamp: 'Anonymous 6/14/2025 14:49'!initializeWithID: anID name: aName rating: aRating    driverID := anID.    name := aName.    rating := aRating.    assignedRides := OrderedCollection new.! !Object subclass: #Ride	instanceVariableNames: 'rideID pickupLocation dropoffLocation distance'	classVariableNames: ''	package: 'RideSharingApp'!!Ride methodsFor: 'initialization' stamp: 'Anonymous 6/14/2025 14:42'!initializeWithID: anID pickup: pickupLoc dropoff: dropoffLoc distance: aDistance    rideID := anID.    pickupLocation := pickupLoc.    dropoffLocation := dropoffLoc.    distance := aDistance.! !!Ride methodsFor: 'farecalculation' stamp: 'Anonymous 6/14/2025 14:43'!fare    "Calculate fare using a base rate per distance unit"    ^ distance * 1.5.  "Assume $1.5 per unit"! !!Ride methodsFor: 'displaying' stamp: 'Anonymous 6/14/2025 14:44'!rideDetails    ^ 'Ride ID: ', rideID asString,       ' | Pickup: ', pickupLocation,       ' | Dropoff: ', dropoffLocation,       ' | Distance: ', distance asString,       ' km | Fare: $', self fare asString! !Ride subclass: #PremiumRide	instanceVariableNames: ''	classVariableNames: ''	package: 'RideSharingApp'!!PremiumRide methodsFor: 'fare-calculation' stamp: 'Anonymous 6/14/2025 14:48'!fare    "Calculate fare using a higher premium rate"    ^ distance * 3.0.! !Object subclass: #Rider	instanceVariableNames: 'riderID name requestedRides'	classVariableNames: ''	package: 'RideSharingApp'!!Rider methodsFor: 'displaying' stamp: 'Anonymous 6/14/2025 14:55'!viewRides    ^ requestedRides collect: [ :ride | ride rideDetails ].! !!Rider methodsFor: 'ride-management' stamp: 'Anonymous 6/14/2025 14:54'!requestRide: aRide    requestedRides add: aRide.! !!Rider methodsFor: 'initialization' stamp: 'Anonymous 6/14/2025 14:53'!initializeWithID: anID name: aName    riderID := anID.    name := aName.    requestedRides := OrderedCollection new.! !Ride subclass: #StandardRide	instanceVariableNames: ''	classVariableNames: ''	package: 'RideSharingApp'!